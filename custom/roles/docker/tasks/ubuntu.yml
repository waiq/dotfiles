---
- name: Add Docker GPG apt Key
  ansible.builtin.apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
  become: true
  become_method: ansible.builtin.sudo

- name: Add Docker Repository
  ansible.builtin.apt_repository:
    repo: deb https://download.docker.com/linux/ubuntu focal stable
    state: present
  become: true
  become_method: ansible.builtin.sudo

- name: Install required system packages
  ansible.builtin.apt:
    pkg:
      - ca-certificates
      - gnupg
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present
    update_cache: true
  become: true
  become_method: ansible.builtin.sudo

- name: Set user to docker group
  become: yes
  become_method: ansible.builtin.sudo
  ansible.builtin.shell: "usermod -aG docker $USER"
  args:
    executable: /bin/bash

- name: Add user to docker group
  ansible.builtin.user:
    name: "{{ lookup('env', 'USER') }}"
    groups: docker
    append: true

# link commands

- name: Add docker custom commands swagger-ui
  ansible.builtin.file:
    src: "{{ core.dirs.custom }}/roles/docker/files/docker-swagger-ui.bash"
    dest: "{{ core.dirs.bin }}/swagger-ui"
    state: link

- name: Add docker custom commands docker-images
  ansible.builtin.file:
    src: "{{ core.dirs.custom }}/roles/docker/files/docker-images.bash"
    dest: "{{ core.dirs.bin }}/docker-images"
    state: link

- name: Add docker custom commands docker-container
  ansible.builtin.file:
    src: "{{ core.dirs.custom }}/roles/docker/files/docker-containers.bash"
    dest: "{{ core.dirs.bin }}/docker-containers"
    state: link

- name: Add docker custom commands docker-prune
  ansible.builtin.file:
    src: "{{ core.dirs.custom }}/roles/docker/files/docker-prune.bash"
    dest: "{{ core.dirs.bin }}/docker-prune"
    state: link
